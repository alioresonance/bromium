grammar com.hribol.bromium.dsl.Bromium with org.eclipse.xtext.common.Terminals

generate bromium "http://www.hribol.com/bromium/dsl/Bromium"

Model:
	'name' name=STRING
	'version' version=STRING
	('from' baseVersion=Version)?
	'actions' '{' 
		actions+=ApplicationAction*
	'}'
;

ApplicationAction:
	'id' name=ID
	'syntax' syntaxDefinitions+=SyntaxDefinition*
	(precondition=Precondition)?
	(actionContext=ActionContext)?
	webDriverAction=WebDriverAction
	(expectHttpRequest=ExpectHttpRequest)?
	(postcondition=Postcondition)?
;

ActionContext:
	TableActionContext |
	WithinContext
;

WithinContext:
	'within' 'element' 'with' elementLocator=Locator
;

TableActionContext:
	'table' 'with' tableLocator=Locator
	'rows' 'with' rowsLocator=Locator
	rowSelector=RowSelector
;

RowSelector:
	RowLocator |
	RowIndex
;

RowLocator: 
	'row' 'with' rowLocator=Locator
;

RowIndex:
	'row' 'number' index=ParameterValue
;

Locator:
	CssSelector | 
	ClassByText |
	CssSelectorByText |
	ActionContext
;

ClassByText:
	'class' klass=ParameterValue 'and' 'text' text=ParameterValue
;

CssSelectorByText:
	'css' 'selector' selector=ParameterValue 'and' 'text' text=ParameterValue
;

CssSelector:
	'css' 'selector' selector=ParameterValue
;

SyntaxDefinition:
	 {SyntaxDefinition} content=STRING (parameter=ExposedParameter)?
;

WebDriverActionCondition:
	ElementByCssToBePresent |
	TextOfElementWithCssSelectorToBe |
	ConfirmAlert
;

WebDriverAction:
	ClickCssSelector |
	ClickClassByText |
	PageLoad |
	TypeTextInElementFoundByCssSelector |
	ClickDataId |
	SetVariableToTextOfElementWithCssSelector |
	ClickId |
	ClickName |
	SelectValue
;

Precondition:
	('when' action=WebDriverActionCondition)
;

Postcondition:
	('then' 'make' 'sure' action=WebDriverActionCondition)
;

ExpectHttpRequest:
	{ExpectHttpRequest} ('do' (not?='not')? 'expect' 'http' 'request')
;


// TODO: syntactic sugar for CSS selectors
ElementByCssToBePresent: 'element' 'with' 'css' parameterNames+='selector' parameterValues+=ParameterValue 'is' 'present';
ClickCssSelector: 'click' 'on' 'element' 'with' 'css' parameterNames+='selector' parameterValues+=ParameterValue;
PageLoad: 'load' parameterNames+='page' parameterValues+=ParameterValue;
TypeTextInElementFoundByCssSelector: 'type' parameterNames+='text' parameterValues+=ParameterValue
'in' 'element' 'with' 'css' parameterNames+='selector' parameterValues+=ParameterValue
;

TextOfElementWithCssSelectorToBe:
	'element' 'with' 'css'
		parameterNames+='selector' parameterValues+=ParameterValue 'has'
		parameterNames+='text' parameterValues+=ParameterValue
;

ClickClassByText:
	'click' 'on' 'element' 'with'
	parameterNames+='class'
	parameterValues+=ParameterValue 'and'
	parameterNames+='text'
	parameterValues+=ParameterValue
;

SetVariableToTextOfElementWithCssSelector:
	'set' parameterNames +='variable' parameterValues+=ParameterValue 'to' 'the' 'text' 'of' 'element' 'with' 'css'
	parameterNames += 'selector' parameterValues+=ParameterValue
;

ClickDataId:
    'click' 'on' 'element' 'with' parameterNames+='dataId' parameterValues+=ParameterValue
;

ConfirmAlert:
	'to' parameterNames+='confirm' parameterValues+= ParameterValue
;

ClickId:
    'click' 'on' 'element' 'with' parameterNames+='id' parameterValues+=ParameterValue
;

ClickName:
    'click' 'on' 'element' 'with' parameterNames+='name' parameterValues+=ParameterValue
;

SelectValue:
    'select' parameterNames+='value' parameterValues+=ParameterValue 'in' 'element' 'with' 'css'
    parameterNames += 'selector' parameterValues+=ParameterValue
;

ParameterValue:
	content=STRING | exposedParameter=[ExposedParameter] | index=INT
;

ExposedParameter:
	name=ID
;

// TODO: include ThreeDotted version as well
Version: STRING;

ThreeDottedVersion:
	big=INT '.' medium=INT '.' small=INT
;
	
